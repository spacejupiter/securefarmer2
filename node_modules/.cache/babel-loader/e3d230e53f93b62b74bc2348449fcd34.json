{"ast":null,"code":"var _jsxFileName = \"/Users/chibuikeanselm/Desktop/secure/src/Dash/notifypanel.js\";\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport homelogo from \"../homelogo.svg\";\nimport '../App.css';\nimport news from \"../images/news.svg\";\nimport metric from \"../images/metric.svg\";\nimport Appdata from '../statedata';\n\nclass NotifyPanel extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Panel, {\n      name: \"Anslem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(CultivationMetric, {\n      percent: \"30\",\n      crop: \"Cassava Plantation\",\n      duration: \"(6 months)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nconst CultivationMetric = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"crop-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"CROP : \", props.crop), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, props.percent, \"%\"), /*#__PURE__*/React.createElement(Progres, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"meter\",\n    src: metric,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mo-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, month, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"duration-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Duration \", props.duration)), \"     \");\n};\n\nconst Progres = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst MonthMetric = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mo-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"month-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.month));\n};\n\nconst [,, MonthData] = Appdata;\nconst month = MonthData.month.map(m => {\n  return /*#__PURE__*/React.createElement(MonthMetric, {\n    month: m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  });\n});\n\nconst Panel = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notify-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"news\",\n    src: news,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notify-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"ft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Hello \", props.name, \" !\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"The season is over your cassava is ready for   harvest !\")));\n};\n\nexport default NotifyPanel;","map":{"version":3,"sources":["/Users/chibuikeanselm/Desktop/secure/src/Dash/notifypanel.js"],"names":["React","ReactDom","Appdata","NotifyPanel","Component","render","CultivationMetric","props","crop","percent","metric","month","duration","Progres","MonthMetric","MonthData","map","m","Panel","news","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport homelogo from '../homelogo.svg';\nimport '../App.css';\nimport news from '../images/news.svg';\nimport metric from '../images/metric.svg'\nimport Appdata from '../statedata';\n\nclass NotifyPanel extends React.Component{\n  render(){\n      return(\n          <div>\n       <Panel name=\"Anslem\" />\n          \n         <CultivationMetric percent=\"30\" crop=\"Cassava Plantation\" duration=\"(6 months)\" /> \n          \n          </div>\n          \n      );\n  }  \n}\nconst CultivationMetric = (props)=>{\n    return(\n    <div className=\"metric-container\">\n        <p className=\"crop-text\">CROP : {props.crop}</p>\n        <p className=\"percentage\">{props.percent}%</p>\n  <Progres   />\n          <img className=\"meter\" src={metric} />\n          <div className=\"mo-panel\">\n          {month}\n        <p className=\"duration-text\">Duration {props.duration}</p>\n     </div>     </div> ) \n}\n\nconst Progres = (props)=>{\n    return(\n        <div className=\"progressbar\">\n        <div className=\"progress\"></div>\n        </div>\n    );\n}\n\n\nconst MonthMetric = (props)=>{\n    return(\n    <div className=\"mo-div\">\n        <p className=\"month-metric\">{props.month}</p>\n        </div>\n    );\n}\n\nconst [,,MonthData]=Appdata;\nconst month= MonthData.month.map((m)=>{\n   return (<MonthMetric month={m} />);\n});\n\n const Panel=(props)=>{\n    return(\n    <div className=\"notify-panel\">\n         <img className=\"news\" src={news} />\n          <div className=\"notify-text\">\n          <h3 className=\"ft\">Hello {props.name} !</h3>\n          <p className=\"ft\">The season is over your cassava is ready for   harvest !</p>\n          </div>\n          </div>\n    );\n    \n}\n \nexport default NotifyPanel;\n    "]},"metadata":{},"sourceType":"module"}